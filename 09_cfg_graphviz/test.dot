digraph cfg {
subgraph fun_0x7f03f82a1000 {
bb_0x7f03f82a1000_0[label="ENTRY: swap
test.c:5"];
bb_0x7f03f82a1000_0 -> bb_0x7f03f82a1000_2;
bb_0x7f03f82a1000_2[label="t_4 = *a_3(D);
_1 = *b_5(D);
*a_3(D) = _1;
*b_5(D) = t_4;
return;
"];
bb_0x7f03f82a1000_2 -> bb_0x7f03f82a1000_1;
bb_0x7f03f82a1000_1[label="EXIT: swap
test.c:9"];
}
subgraph fun_0x7f03f82a10b0 {
bb_0x7f03f82a10b0_0[label="ENTRY: partition
test.c:13"];
bb_0x7f03f82a10b0_0 -> bb_0x7f03f82a10b0_2;
bb_0x7f03f82a10b0_2[label="_1 = (long unsigned int) h_26(D);
_2 = _1 * 4;
_3 = arr_27(D) + _2;
x_29 = *_3;
i_31 = l_30(D) + -1;
j_32 = l_30(D);
"];
bb_0x7f03f82a10b0_2 -> bb_0x7f03f82a10b0_6;
bb_0x7f03f82a10b0_3[label="_4 = (long unsigned int) j_23;
_5 = _4 * 4;
_6 = arr_27(D) + _5;
_7 = *_6;
if (x_29 >= _7)
"];
bb_0x7f03f82a10b0_3 -> bb_0x7f03f82a10b0_4;
bb_0x7f03f82a10b0_3 -> bb_0x7f03f82a10b0_5;
bb_0x7f03f82a10b0_4[label="i_35 = i_22 + 1;
_8 = (long unsigned int) j_23;
_9 = _8 * 4;
_10 = arr_27(D) + _9;
_11 = (long unsigned int) i_35;
_12 = _11 * 4;
_13 = arr_27(D) + _12;
swap (_13, _10);
"];
bb_0x7f03f82a10b0_4 -> bb_0x7f03f82a10b0_5;
bb_0x7f03f82a10b0_5[label="j_37 = j_23 + 1;
"];
bb_0x7f03f82a10b0_5 -> bb_0x7f03f82a10b0_6;
bb_0x7f03f82a10b0_6[label="if (h_26(D) > j_23)
"];
bb_0x7f03f82a10b0_6 -> bb_0x7f03f82a10b0_3;
bb_0x7f03f82a10b0_6 -> bb_0x7f03f82a10b0_7;
bb_0x7f03f82a10b0_7[label="_14 = (long unsigned int) h_26(D);
_15 = _14 * 4;
_16 = arr_27(D) + _15;
_17 = (sizetype) i_22;
_18 = _17 + 1;
_19 = _18 * 4;
_20 = arr_27(D) + _19;
swap (_20, _16);
_34 = i_22 + 1;
"];
bb_0x7f03f82a10b0_7 -> bb_0x7f03f82a10b0_8;
bb_0x7f03f82a10b0_8[label="<L5>:
return _34;
"];
bb_0x7f03f82a10b0_8 -> bb_0x7f03f82a10b0_1;
bb_0x7f03f82a10b0_1[label="EXIT: partition
test.c:28"];
}
subgraph fun_0x7f03f82a1160 {
bb_0x7f03f82a1160_0[label="ENTRY: quickSortIterative
test.c:32"];
bb_0x7f03f82a1160_0 -> bb_0x7f03f82a1160_2;
bb_0x7f03f82a1160_2[label="saved_stack.3_22 = __builtin_stack_save ();
_1 = h_23(D) - l_24(D);
_25 = _1 + 1;
_2 = (long int) _25;
_3 = _2 + -1;
_26 = (sizetype) _3;
_5 = (sizetype) _25;
_6 = (bitsizetype) _5;
_27 = _6 * 32;
_8 = (sizetype) _25;
_28 = _8 * 4;
_10 = (sizetype) _25;
_11 = (bitsizetype) _10;
_29 = _11 * 32;
_13 = (sizetype) _25;
_30 = _13 * 4;
stack.0_32 = __builtin_alloca_with_align (_30, 32);
top_33 = -1;
top_34 = top_33 + 1;
(*stack.0_32)[top_34] = l_24(D);
top_36 = top_34 + 1;
(*stack.0_32)[top_36] = h_23(D);
"];
bb_0x7f03f82a1160_2 -> bb_0x7f03f82a1160_7;
bb_0x7f03f82a1160_3[label="top.1_15 = top_12;
top_39 = top.1_15 + -1;
h_40 = (*stack.0_32)[top.1_15];
top.2_16 = top_39;
top_41 = top.2_16 + -1;
l_42 = (*stack.0_32)[top.2_16];
p_45 = partition (arr_43(D), l_42, h_40);
_17 = p_45 + -1;
if (l_42 < _17)
"];
bb_0x7f03f82a1160_3 -> bb_0x7f03f82a1160_4;
bb_0x7f03f82a1160_3 -> bb_0x7f03f82a1160_5;
bb_0x7f03f82a1160_4[label="top_46 = top_41 + 1;
(*stack.0_32)[top_46] = l_42;
top_48 = top_46 + 1;
_18 = p_45 + -1;
(*stack.0_32)[top_48] = _18;
"];
bb_0x7f03f82a1160_4 -> bb_0x7f03f82a1160_5;
bb_0x7f03f82a1160_5[label="_19 = p_45 + 1;
if (h_40 > _19)
"];
bb_0x7f03f82a1160_5 -> bb_0x7f03f82a1160_6;
bb_0x7f03f82a1160_5 -> bb_0x7f03f82a1160_7;
bb_0x7f03f82a1160_6[label="top_50 = top_14 + 1;
_20 = p_45 + 1;
(*stack.0_32)[top_50] = _20;
top_52 = top_50 + 1;
(*stack.0_32)[top_52] = h_40;
"];
bb_0x7f03f82a1160_6 -> bb_0x7f03f82a1160_7;
bb_0x7f03f82a1160_7[label="if (top_12 >= 0)
"];
bb_0x7f03f82a1160_7 -> bb_0x7f03f82a1160_3;
bb_0x7f03f82a1160_7 -> bb_0x7f03f82a1160_8;
bb_0x7f03f82a1160_8[label="__builtin_stack_restore (saved_stack.3_22);
return;
"];
bb_0x7f03f82a1160_8 -> bb_0x7f03f82a1160_1;
bb_0x7f03f82a1160_1[label="EXIT: quickSortIterative
test.c:69"];
}
}
